/*
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gotit.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gotit.sdk.model.PRODUCTPRICESCHEMA;
import com.gotit.sdk.model.STOREPRODUCTSCHEMA;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.gotit.sdk.JSON;

/**
 * PRODUCTV
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-05T09:04:05.866297444Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class PRODUCTV {
  public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  @javax.annotation.Nullable
  private Integer productId;

  public static final String SERIALIZED_NAME_PRODUCT_NM = "productNm";
  @SerializedName(SERIALIZED_NAME_PRODUCT_NM)
  @javax.annotation.Nullable
  private String productNm;

  public static final String SERIALIZED_NAME_PRODUCT_IMG = "productImg";
  @SerializedName(SERIALIZED_NAME_PRODUCT_IMG)
  @javax.annotation.Nullable
  private String productImg;

  public static final String SERIALIZED_NAME_BRAND_ID = "brandId";
  @SerializedName(SERIALIZED_NAME_BRAND_ID)
  @javax.annotation.Nullable
  private Integer brandId;

  public static final String SERIALIZED_NAME_BRAND_NM = "brandNm";
  @SerializedName(SERIALIZED_NAME_BRAND_NM)
  @javax.annotation.Nullable
  private String brandNm;

  public static final String SERIALIZED_NAME_BRAND_SERVICE_GUIDE = "brandServiceGuide";
  @SerializedName(SERIALIZED_NAME_BRAND_SERVICE_GUIDE)
  @javax.annotation.Nullable
  private String brandServiceGuide;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  @javax.annotation.Nullable
  private String link;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  @javax.annotation.Nullable
  private PRODUCTPRICESCHEMA price;

  public static final String SERIALIZED_NAME_PRODUCT_DESC = "productDesc";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DESC)
  @javax.annotation.Nullable
  private String productDesc;

  public static final String SERIALIZED_NAME_TERMS = "terms";
  @SerializedName(SERIALIZED_NAME_TERMS)
  @javax.annotation.Nullable
  private String terms;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "productType";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  @javax.annotation.Nullable
  private String productType;

  public static final String SERIALIZED_NAME_STORE_LIST = "storeList";
  @SerializedName(SERIALIZED_NAME_STORE_LIST)
  @javax.annotation.Nullable
  private List<STOREPRODUCTSCHEMA> storeList = new ArrayList<>();

  public PRODUCTV() {
  }

  public PRODUCTV productId(@javax.annotation.Nullable Integer productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Product Id
   * @return productId
   */
  @javax.annotation.Nullable
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(@javax.annotation.Nullable Integer productId) {
    this.productId = productId;
  }


  public PRODUCTV productNm(@javax.annotation.Nullable String productNm) {
    this.productNm = productNm;
    return this;
  }

  /**
   * Product Name
   * @return productNm
   */
  @javax.annotation.Nullable
  public String getProductNm() {
    return productNm;
  }

  public void setProductNm(@javax.annotation.Nullable String productNm) {
    this.productNm = productNm;
  }


  public PRODUCTV productImg(@javax.annotation.Nullable String productImg) {
    this.productImg = productImg;
    return this;
  }

  /**
   * Link product image
   * @return productImg
   */
  @javax.annotation.Nullable
  public String getProductImg() {
    return productImg;
  }

  public void setProductImg(@javax.annotation.Nullable String productImg) {
    this.productImg = productImg;
  }


  public PRODUCTV brandId(@javax.annotation.Nullable Integer brandId) {
    this.brandId = brandId;
    return this;
  }

  /**
   * Brand id
   * @return brandId
   */
  @javax.annotation.Nullable
  public Integer getBrandId() {
    return brandId;
  }

  public void setBrandId(@javax.annotation.Nullable Integer brandId) {
    this.brandId = brandId;
  }


  public PRODUCTV brandNm(@javax.annotation.Nullable String brandNm) {
    this.brandNm = brandNm;
    return this;
  }

  /**
   * Brand name
   * @return brandNm
   */
  @javax.annotation.Nullable
  public String getBrandNm() {
    return brandNm;
  }

  public void setBrandNm(@javax.annotation.Nullable String brandNm) {
    this.brandNm = brandNm;
  }


  public PRODUCTV brandServiceGuide(@javax.annotation.Nullable String brandServiceGuide) {
    this.brandServiceGuide = brandServiceGuide;
    return this;
  }

  /**
   * Get brandServiceGuide
   * @return brandServiceGuide
   */
  @javax.annotation.Nullable
  public String getBrandServiceGuide() {
    return brandServiceGuide;
  }

  public void setBrandServiceGuide(@javax.annotation.Nullable String brandServiceGuide) {
    this.brandServiceGuide = brandServiceGuide;
  }


  public PRODUCTV link(@javax.annotation.Nullable String link) {
    this.link = link;
    return this;
  }

  /**
   * Get link
   * @return link
   */
  @javax.annotation.Nullable
  public String getLink() {
    return link;
  }

  public void setLink(@javax.annotation.Nullable String link) {
    this.link = link;
  }


  public PRODUCTV price(@javax.annotation.Nullable PRODUCTPRICESCHEMA price) {
    this.price = price;
    return this;
  }

  /**
   * Get price
   * @return price
   */
  @javax.annotation.Nullable
  public PRODUCTPRICESCHEMA getPrice() {
    return price;
  }

  public void setPrice(@javax.annotation.Nullable PRODUCTPRICESCHEMA price) {
    this.price = price;
  }


  public PRODUCTV productDesc(@javax.annotation.Nullable String productDesc) {
    this.productDesc = productDesc;
    return this;
  }

  /**
   * Get productDesc
   * @return productDesc
   */
  @javax.annotation.Nullable
  public String getProductDesc() {
    return productDesc;
  }

  public void setProductDesc(@javax.annotation.Nullable String productDesc) {
    this.productDesc = productDesc;
  }


  public PRODUCTV terms(@javax.annotation.Nullable String terms) {
    this.terms = terms;
    return this;
  }

  /**
   * Get terms
   * @return terms
   */
  @javax.annotation.Nullable
  public String getTerms() {
    return terms;
  }

  public void setTerms(@javax.annotation.Nullable String terms) {
    this.terms = terms;
  }


  public PRODUCTV productType(@javax.annotation.Nullable String productType) {
    this.productType = productType;
    return this;
  }

  /**
   * Get productType
   * @return productType
   */
  @javax.annotation.Nullable
  public String getProductType() {
    return productType;
  }

  public void setProductType(@javax.annotation.Nullable String productType) {
    this.productType = productType;
  }


  public PRODUCTV storeList(@javax.annotation.Nullable List<STOREPRODUCTSCHEMA> storeList) {
    this.storeList = storeList;
    return this;
  }

  public PRODUCTV addStoreListItem(STOREPRODUCTSCHEMA storeListItem) {
    if (this.storeList == null) {
      this.storeList = new ArrayList<>();
    }
    this.storeList.add(storeListItem);
    return this;
  }

  /**
   * Get storeList
   * @return storeList
   */
  @javax.annotation.Nullable
  public List<STOREPRODUCTSCHEMA> getStoreList() {
    return storeList;
  }

  public void setStoreList(@javax.annotation.Nullable List<STOREPRODUCTSCHEMA> storeList) {
    this.storeList = storeList;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PRODUCTV PRODUCT_V = (PRODUCTV) o;
    return Objects.equals(this.productId, PRODUCT_V.productId) &&
        Objects.equals(this.productNm, PRODUCT_V.productNm) &&
        Objects.equals(this.productImg, PRODUCT_V.productImg) &&
        Objects.equals(this.brandId, PRODUCT_V.brandId) &&
        Objects.equals(this.brandNm, PRODUCT_V.brandNm) &&
        Objects.equals(this.brandServiceGuide, PRODUCT_V.brandServiceGuide) &&
        Objects.equals(this.link, PRODUCT_V.link) &&
        Objects.equals(this.price, PRODUCT_V.price) &&
        Objects.equals(this.productDesc, PRODUCT_V.productDesc) &&
        Objects.equals(this.terms, PRODUCT_V.terms) &&
        Objects.equals(this.productType, PRODUCT_V.productType) &&
        Objects.equals(this.storeList, PRODUCT_V.storeList);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, productNm, productImg, brandId, brandNm, brandServiceGuide, link, price, productDesc, terms, productType, storeList);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PRODUCTV {\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productNm: ").append(toIndentedString(productNm)).append("\n");
    sb.append("    productImg: ").append(toIndentedString(productImg)).append("\n");
    sb.append("    brandId: ").append(toIndentedString(brandId)).append("\n");
    sb.append("    brandNm: ").append(toIndentedString(brandNm)).append("\n");
    sb.append("    brandServiceGuide: ").append(toIndentedString(brandServiceGuide)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    productDesc: ").append(toIndentedString(productDesc)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    storeList: ").append(toIndentedString(storeList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("productId");
    openapiFields.add("productNm");
    openapiFields.add("productImg");
    openapiFields.add("brandId");
    openapiFields.add("brandNm");
    openapiFields.add("brandServiceGuide");
    openapiFields.add("link");
    openapiFields.add("price");
    openapiFields.add("productDesc");
    openapiFields.add("terms");
    openapiFields.add("productType");
    openapiFields.add("storeList");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PRODUCTV
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PRODUCTV.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PRODUCTV is not found in the empty JSON string", PRODUCTV.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PRODUCTV.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PRODUCTV` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("productNm") != null && !jsonObj.get("productNm").isJsonNull()) && !jsonObj.get("productNm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productNm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productNm").toString()));
      }
      if ((jsonObj.get("productImg") != null && !jsonObj.get("productImg").isJsonNull()) && !jsonObj.get("productImg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productImg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productImg").toString()));
      }
      if ((jsonObj.get("brandNm") != null && !jsonObj.get("brandNm").isJsonNull()) && !jsonObj.get("brandNm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brandNm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brandNm").toString()));
      }
      if ((jsonObj.get("brandServiceGuide") != null && !jsonObj.get("brandServiceGuide").isJsonNull()) && !jsonObj.get("brandServiceGuide").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `brandServiceGuide` to be a primitive type in the JSON string but got `%s`", jsonObj.get("brandServiceGuide").toString()));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      // validate the optional field `price`
      if (jsonObj.get("price") != null && !jsonObj.get("price").isJsonNull()) {
        PRODUCTPRICESCHEMA.validateJsonElement(jsonObj.get("price"));
      }
      if ((jsonObj.get("productDesc") != null && !jsonObj.get("productDesc").isJsonNull()) && !jsonObj.get("productDesc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productDesc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productDesc").toString()));
      }
      if ((jsonObj.get("terms") != null && !jsonObj.get("terms").isJsonNull()) && !jsonObj.get("terms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `terms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("terms").toString()));
      }
      if ((jsonObj.get("productType") != null && !jsonObj.get("productType").isJsonNull()) && !jsonObj.get("productType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productType").toString()));
      }
      if (jsonObj.get("storeList") != null && !jsonObj.get("storeList").isJsonNull()) {
        JsonArray jsonArraystoreList = jsonObj.getAsJsonArray("storeList");
        if (jsonArraystoreList != null) {
          // ensure the json data is an array
          if (!jsonObj.get("storeList").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `storeList` to be an array in the JSON string but got `%s`", jsonObj.get("storeList").toString()));
          }

          // validate the optional field `storeList` (array)
          for (int i = 0; i < jsonArraystoreList.size(); i++) {
            STOREPRODUCTSCHEMA.validateJsonElement(jsonArraystoreList.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PRODUCTV.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PRODUCTV' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PRODUCTV> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PRODUCTV.class));

       return (TypeAdapter<T>) new TypeAdapter<PRODUCTV>() {
           @Override
           public void write(JsonWriter out, PRODUCTV value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PRODUCTV read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PRODUCTV given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PRODUCTV
   * @throws IOException if the JSON string is invalid with respect to PRODUCTV
   */
  public static PRODUCTV fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PRODUCTV.class);
  }

  /**
   * Convert an instance of PRODUCTV to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

