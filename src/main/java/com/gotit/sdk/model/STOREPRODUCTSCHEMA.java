/*
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gotit.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.gotit.sdk.JSON;

/**
 * STOREPRODUCTSCHEMA
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-05T09:04:05.866297444Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class STOREPRODUCTSCHEMA {
  public static final String SERIALIZED_NAME_STORE_ID = "storeId";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  @javax.annotation.Nullable
  private Integer storeId;

  public static final String SERIALIZED_NAME_STORE_NM = "storeNm";
  @SerializedName(SERIALIZED_NAME_STORE_NM)
  @javax.annotation.Nullable
  private String storeNm;

  public static final String SERIALIZED_NAME_STORE_ADDR = "storeAddr";
  @SerializedName(SERIALIZED_NAME_STORE_ADDR)
  @javax.annotation.Nullable
  private String storeAddr;

  public static final String SERIALIZED_NAME_LAT = "lat";
  @SerializedName(SERIALIZED_NAME_LAT)
  @javax.annotation.Nullable
  private Float lat;

  public static final String SERIALIZED_NAME_LONG = "long";
  @SerializedName(SERIALIZED_NAME_LONG)
  @javax.annotation.Nullable
  private Float _long;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  @javax.annotation.Nullable
  private String phone;

  public static final String SERIALIZED_NAME_CITY_ID = "city_id";
  @SerializedName(SERIALIZED_NAME_CITY_ID)
  @javax.annotation.Nullable
  private Integer cityId;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  @javax.annotation.Nullable
  private String city;

  public static final String SERIALIZED_NAME_DIST_ID = "dist_id";
  @SerializedName(SERIALIZED_NAME_DIST_ID)
  @javax.annotation.Nullable
  private Integer distId;

  public static final String SERIALIZED_NAME_DISTRICT = "district";
  @SerializedName(SERIALIZED_NAME_DISTRICT)
  @javax.annotation.Nullable
  private String district;

  public STOREPRODUCTSCHEMA() {
  }

  public STOREPRODUCTSCHEMA storeId(@javax.annotation.Nullable Integer storeId) {
    this.storeId = storeId;
    return this;
  }

  /**
   * Store Id
   * @return storeId
   */
  @javax.annotation.Nullable
  public Integer getStoreId() {
    return storeId;
  }

  public void setStoreId(@javax.annotation.Nullable Integer storeId) {
    this.storeId = storeId;
  }


  public STOREPRODUCTSCHEMA storeNm(@javax.annotation.Nullable String storeNm) {
    this.storeNm = storeNm;
    return this;
  }

  /**
   * Store Name
   * @return storeNm
   */
  @javax.annotation.Nullable
  public String getStoreNm() {
    return storeNm;
  }

  public void setStoreNm(@javax.annotation.Nullable String storeNm) {
    this.storeNm = storeNm;
  }


  public STOREPRODUCTSCHEMA storeAddr(@javax.annotation.Nullable String storeAddr) {
    this.storeAddr = storeAddr;
    return this;
  }

  /**
   * Store Address
   * @return storeAddr
   */
  @javax.annotation.Nullable
  public String getStoreAddr() {
    return storeAddr;
  }

  public void setStoreAddr(@javax.annotation.Nullable String storeAddr) {
    this.storeAddr = storeAddr;
  }


  public STOREPRODUCTSCHEMA lat(@javax.annotation.Nullable Float lat) {
    this.lat = lat;
    return this;
  }

  /**
   * Lat location on Google maps
   * @return lat
   */
  @javax.annotation.Nullable
  public Float getLat() {
    return lat;
  }

  public void setLat(@javax.annotation.Nullable Float lat) {
    this.lat = lat;
  }


  public STOREPRODUCTSCHEMA _long(@javax.annotation.Nullable Float _long) {
    this._long = _long;
    return this;
  }

  /**
   * Long location on Google maps
   * @return _long
   */
  @javax.annotation.Nullable
  public Float getLong() {
    return _long;
  }

  public void setLong(@javax.annotation.Nullable Float _long) {
    this._long = _long;
  }


  public STOREPRODUCTSCHEMA phone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Store Phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
  }


  public STOREPRODUCTSCHEMA cityId(@javax.annotation.Nullable Integer cityId) {
    this.cityId = cityId;
    return this;
  }

  /**
   * City code (Got It identifier)
   * @return cityId
   */
  @javax.annotation.Nullable
  public Integer getCityId() {
    return cityId;
  }

  public void setCityId(@javax.annotation.Nullable Integer cityId) {
    this.cityId = cityId;
  }


  public STOREPRODUCTSCHEMA city(@javax.annotation.Nullable String city) {
    this.city = city;
    return this;
  }

  /**
   * City name
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(@javax.annotation.Nullable String city) {
    this.city = city;
  }


  public STOREPRODUCTSCHEMA distId(@javax.annotation.Nullable Integer distId) {
    this.distId = distId;
    return this;
  }

  /**
   * District code (Got It identifier)
   * @return distId
   */
  @javax.annotation.Nullable
  public Integer getDistId() {
    return distId;
  }

  public void setDistId(@javax.annotation.Nullable Integer distId) {
    this.distId = distId;
  }


  public STOREPRODUCTSCHEMA district(@javax.annotation.Nullable String district) {
    this.district = district;
    return this;
  }

  /**
   * District name
   * @return district
   */
  @javax.annotation.Nullable
  public String getDistrict() {
    return district;
  }

  public void setDistrict(@javax.annotation.Nullable String district) {
    this.district = district;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    STOREPRODUCTSCHEMA STORE_PRODUCT_SCHEMA = (STOREPRODUCTSCHEMA) o;
    return Objects.equals(this.storeId, STORE_PRODUCT_SCHEMA.storeId) &&
        Objects.equals(this.storeNm, STORE_PRODUCT_SCHEMA.storeNm) &&
        Objects.equals(this.storeAddr, STORE_PRODUCT_SCHEMA.storeAddr) &&
        Objects.equals(this.lat, STORE_PRODUCT_SCHEMA.lat) &&
        Objects.equals(this._long, STORE_PRODUCT_SCHEMA._long) &&
        Objects.equals(this.phone, STORE_PRODUCT_SCHEMA.phone) &&
        Objects.equals(this.cityId, STORE_PRODUCT_SCHEMA.cityId) &&
        Objects.equals(this.city, STORE_PRODUCT_SCHEMA.city) &&
        Objects.equals(this.distId, STORE_PRODUCT_SCHEMA.distId) &&
        Objects.equals(this.district, STORE_PRODUCT_SCHEMA.district);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(storeId, storeNm, storeAddr, lat, _long, phone, cityId, city, distId, district);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class STOREPRODUCTSCHEMA {\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    storeNm: ").append(toIndentedString(storeNm)).append("\n");
    sb.append("    storeAddr: ").append(toIndentedString(storeAddr)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    _long: ").append(toIndentedString(_long)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    cityId: ").append(toIndentedString(cityId)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    distId: ").append(toIndentedString(distId)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("storeId");
    openapiFields.add("storeNm");
    openapiFields.add("storeAddr");
    openapiFields.add("lat");
    openapiFields.add("long");
    openapiFields.add("phone");
    openapiFields.add("city_id");
    openapiFields.add("city");
    openapiFields.add("dist_id");
    openapiFields.add("district");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to STOREPRODUCTSCHEMA
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!STOREPRODUCTSCHEMA.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in STOREPRODUCTSCHEMA is not found in the empty JSON string", STOREPRODUCTSCHEMA.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!STOREPRODUCTSCHEMA.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `STOREPRODUCTSCHEMA` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("storeNm") != null && !jsonObj.get("storeNm").isJsonNull()) && !jsonObj.get("storeNm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storeNm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storeNm").toString()));
      }
      if ((jsonObj.get("storeAddr") != null && !jsonObj.get("storeAddr").isJsonNull()) && !jsonObj.get("storeAddr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storeAddr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storeAddr").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("district") != null && !jsonObj.get("district").isJsonNull()) && !jsonObj.get("district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("district").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!STOREPRODUCTSCHEMA.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'STOREPRODUCTSCHEMA' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<STOREPRODUCTSCHEMA> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(STOREPRODUCTSCHEMA.class));

       return (TypeAdapter<T>) new TypeAdapter<STOREPRODUCTSCHEMA>() {
           @Override
           public void write(JsonWriter out, STOREPRODUCTSCHEMA value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public STOREPRODUCTSCHEMA read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of STOREPRODUCTSCHEMA given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of STOREPRODUCTSCHEMA
   * @throws IOException if the JSON string is invalid with respect to STOREPRODUCTSCHEMA
   */
  public static STOREPRODUCTSCHEMA fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, STOREPRODUCTSCHEMA.class);
  }

  /**
   * Convert an instance of STOREPRODUCTSCHEMA to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

