/*
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gotit.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.gotit.sdk.JSON;

/**
 * REQUESTCREATEVOUCHERLINKV
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-05T09:04:05.866297444Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class REQUESTCREATEVOUCHERLINKV {
  public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  @javax.annotation.Nonnull
  private Integer productId;

  public static final String SERIALIZED_NAME_PRODUCT_PRICE_ID = "productPriceId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_PRICE_ID)
  @javax.annotation.Nonnull
  private Integer productPriceId;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  @javax.annotation.Nonnull
  private Integer quantity;

  public static final String SERIALIZED_NAME_ORDER_NAME = "orderName";
  @SerializedName(SERIALIZED_NAME_ORDER_NAME)
  @javax.annotation.Nonnull
  private String orderName;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiryDate";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  @javax.annotation.Nonnull
  private String expiryDate;

  public static final String SERIALIZED_NAME_TRANSACTION_REF_ID = "transactionRefId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_REF_ID)
  @javax.annotation.Nonnull
  private String transactionRefId;

  public static final String SERIALIZED_NAME_USE_OTP = "use_otp";
  @SerializedName(SERIALIZED_NAME_USE_OTP)
  @javax.annotation.Nullable
  private Integer useOtp;

  public static final String SERIALIZED_NAME_OTP_TYPE = "otp_type";
  @SerializedName(SERIALIZED_NAME_OTP_TYPE)
  @javax.annotation.Nullable
  private Integer otpType;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  @javax.annotation.Nullable
  private String password;

  public static final String SERIALIZED_NAME_RECEIVER_NAME = "receiver_name";
  @SerializedName(SERIALIZED_NAME_RECEIVER_NAME)
  @javax.annotation.Nullable
  private String receiverName;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  @javax.annotation.Nullable
  private String phone;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nullable
  private String email;

  public static final String SERIALIZED_NAME_SIGNATURE = "signature";
  @SerializedName(SERIALIZED_NAME_SIGNATURE)
  @javax.annotation.Nullable
  private String signature;

  public static final String SERIALIZED_NAME_ACTIVE_DATE = "activeDate";
  @SerializedName(SERIALIZED_NAME_ACTIVE_DATE)
  @javax.annotation.Nullable
  private String activeDate;

  public static final String SERIALIZED_NAME_IS_CONVERT_TO_COVER_LINK = "isConvertToCoverLink";
  @SerializedName(SERIALIZED_NAME_IS_CONVERT_TO_COVER_LINK)
  @javax.annotation.Nullable
  private Integer isConvertToCoverLink;

  public REQUESTCREATEVOUCHERLINKV() {
  }

  public REQUESTCREATEVOUCHERLINKV productId(@javax.annotation.Nonnull Integer productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Product id. You can see the Products section for the product id. Note: productId type auto convert merchant code does not support creating cover links.
   * @return productId
   */
  @javax.annotation.Nonnull
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(@javax.annotation.Nonnull Integer productId) {
    this.productId = productId;
  }


  public REQUESTCREATEVOUCHERLINKV productPriceId(@javax.annotation.Nonnull Integer productPriceId) {
    this.productPriceId = productPriceId;
    return this;
  }

  /**
   * Product price id. Each product will have 1 or more denomination codes corresponding to the value or converted product size.
   * @return productPriceId
   */
  @javax.annotation.Nonnull
  public Integer getProductPriceId() {
    return productPriceId;
  }

  public void setProductPriceId(@javax.annotation.Nonnull Integer productPriceId) {
    this.productPriceId = productPriceId;
  }


  public REQUESTCREATEVOUCHERLINKV quantity(@javax.annotation.Nonnull Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Number of vouchers to be issued
   * @return quantity
   */
  @javax.annotation.Nonnull
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(@javax.annotation.Nonnull Integer quantity) {
    this.quantity = quantity;
  }


  public REQUESTCREATEVOUCHERLINKV orderName(@javax.annotation.Nonnull String orderName) {
    this.orderName = orderName;
    return this;
  }

  /**
   * Please don&#39;t use the voucher recipient or the content changes daily or frequently. Owl French: Customers specified name + [Month] + [Year] Example: Got It Promotion - Jul 2019
   * @return orderName
   */
  @javax.annotation.Nonnull
  public String getOrderName() {
    return orderName;
  }

  public void setOrderName(@javax.annotation.Nonnull String orderName) {
    this.orderName = orderName;
  }


  public REQUESTCREATEVOUCHERLINKV expiryDate(@javax.annotation.Nonnull String expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

  /**
   * Voucher expiration date. Syntax &#39;YYYY-MM-DD&#39;. The expiration date is specified specified in the contract between the partner and Got It, usually 3 months from the release date, maximum 12 months.
   * @return expiryDate
   */
  @javax.annotation.Nonnull
  public String getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(@javax.annotation.Nonnull String expiryDate) {
    this.expiryDate = expiryDate;
  }


  public REQUESTCREATEVOUCHERLINKV transactionRefId(@javax.annotation.Nonnull String transactionRefId) {
    this.transactionRefId = transactionRefId;
    return this;
  }

  /**
   * Transaction code receive from the customer request, used for comparison and reconciliation. If the transaction fails, after 5 mintegerues, you can use this transmitted transactionRefID to request again. Maximum 255 characters. Format of transactionRefId: prefix + &#39;_&#39; + character string In which: + prefix: string of 06 integer characters provided by Got It. + character string: string actively generated by clients Example: prefix: &#39;000742&#39; character string: &#39;20220126-6f823f2e&#39; &#x3D;&gt; transactionRefId: &#39;000742_20220126-6f823f2e&#39;
   * @return transactionRefId
   */
  @javax.annotation.Nonnull
  public String getTransactionRefId() {
    return transactionRefId;
  }

  public void setTransactionRefId(@javax.annotation.Nonnull String transactionRefId) {
    this.transactionRefId = transactionRefId;
  }


  public REQUESTCREATEVOUCHERLINKV useOtp(@javax.annotation.Nullable Integer useOtp) {
    this.useOtp = useOtp;
    return this;
  }

  /**
   * &#x3D; 1 if the end user is required to enter a password to view the voucher. Example: 1
   * @return useOtp
   */
  @javax.annotation.Nullable
  public Integer getUseOtp() {
    return useOtp;
  }

  public void setUseOtp(@javax.annotation.Nullable Integer useOtp) {
    this.useOtp = useOtp;
  }


  public REQUESTCREATEVOUCHERLINKV otpType(@javax.annotation.Nullable Integer otpType) {
    this.otpType = otpType;
    return this;
  }

  /**
   * &#x3D; 1 if OTP is sent via phone number; &#x3D; 7 if OTP is sent via email; &#x3D; 8 if password Password is a fixed number - passed in param &#39;password&#39; For example: 1
   * @return otpType
   */
  @javax.annotation.Nullable
  public Integer getOtpType() {
    return otpType;
  }

  public void setOtpType(@javax.annotation.Nullable Integer otpType) {
    this.otpType = otpType;
  }


  public REQUESTCREATEVOUCHERLINKV password(@javax.annotation.Nullable String password) {
    this.password = password;
    return this;
  }

  /**
   * Fixed password (corresponding to otp_type&#x3D;8 passed in parram &#39;otp_type&#39;. For otp_type &#x3D; 1 or 7 do not need to be passed integero this field). Format requirement: 6 consecutive integer characters Example: &#39;325243&#39;
   * @return password
   */
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }

  public void setPassword(@javax.annotation.Nullable String password) {
    this.password = password;
  }


  public REQUESTCREATEVOUCHERLINKV receiverName(@javax.annotation.Nullable String receiverName) {
    this.receiverName = receiverName;
    return this;
  }

  /**
   * Voucher recipient name Example: Son Tran
   * @return receiverName
   */
  @javax.annotation.Nullable
  public String getReceiverName() {
    return receiverName;
  }

  public void setReceiverName(@javax.annotation.Nullable String receiverName) {
    this.receiverName = receiverName;
  }


  public REQUESTCREATEVOUCHERLINKV phone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Phone number to receive the voucher. This is only the step to identify the phone number that will receive the voucher. This step has not been completed yet. Sending vouchers, sending vouchers via SMS will be a separate API section. This phone number is also used to receive OTP when the end-user opens the voucher link, respectively otp_type &#x3D; 1. Request format: 10 consecutive integer characters. For example: 0909xxxxxx
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
  }


  public REQUESTCREATEVOUCHERLINKV email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * Email to receive the voucher. This is just the step to identify the email address that will receive the voucher. This step does not include sending the voucher, sending the voucher via email will be a separate API section. This email address is also used to receive OTP when the end-user opens the voucher link, corresponding to otp_type &#x3D; 7 . For example: son.tran@ dayone.vn
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }


  public REQUESTCREATEVOUCHERLINKV signature(@javax.annotation.Nullable String signature) {
    this.signature = signature;
    return this;
  }

  /**
   * RSA encryption, used for client authentication
   * @return signature
   */
  @javax.annotation.Nullable
  public String getSignature() {
    return signature;
  }

  public void setSignature(@javax.annotation.Nullable String signature) {
    this.signature = signature;
  }


  public REQUESTCREATEVOUCHERLINKV activeDate(@javax.annotation.Nullable String activeDate) {
    this.activeDate = activeDate;
    return this;
  }

  /**
   * Voucher validity start date, validity date must be greater than issue date. Format: &#39;YYYY-MM-DD&#39;. Note: before this date, the voucher will be in Inactive status and cannot be used.
   * @return activeDate
   */
  @javax.annotation.Nullable
  public String getActiveDate() {
    return activeDate;
  }

  public void setActiveDate(@javax.annotation.Nullable String activeDate) {
    this.activeDate = activeDate;
  }


  public REQUESTCREATEVOUCHERLINKV isConvertToCoverLink(@javax.annotation.Nullable Integer isConvertToCoverLink) {
    this.isConvertToCoverLink = isConvertToCoverLink;
    return this;
  }

  /**
   * Type of voucher link to be issued: If &#x3D; 0 (default): Create voucher link. If &#x3D; 1: Create cover link for voucher link.
   * @return isConvertToCoverLink
   */
  @javax.annotation.Nullable
  public Integer getIsConvertToCoverLink() {
    return isConvertToCoverLink;
  }

  public void setIsConvertToCoverLink(@javax.annotation.Nullable Integer isConvertToCoverLink) {
    this.isConvertToCoverLink = isConvertToCoverLink;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    REQUESTCREATEVOUCHERLINKV REQUEST_CREATE_VOUCHER_LINK_V = (REQUESTCREATEVOUCHERLINKV) o;
    return Objects.equals(this.productId, REQUEST_CREATE_VOUCHER_LINK_V.productId) &&
        Objects.equals(this.productPriceId, REQUEST_CREATE_VOUCHER_LINK_V.productPriceId) &&
        Objects.equals(this.quantity, REQUEST_CREATE_VOUCHER_LINK_V.quantity) &&
        Objects.equals(this.orderName, REQUEST_CREATE_VOUCHER_LINK_V.orderName) &&
        Objects.equals(this.expiryDate, REQUEST_CREATE_VOUCHER_LINK_V.expiryDate) &&
        Objects.equals(this.transactionRefId, REQUEST_CREATE_VOUCHER_LINK_V.transactionRefId) &&
        Objects.equals(this.useOtp, REQUEST_CREATE_VOUCHER_LINK_V.useOtp) &&
        Objects.equals(this.otpType, REQUEST_CREATE_VOUCHER_LINK_V.otpType) &&
        Objects.equals(this.password, REQUEST_CREATE_VOUCHER_LINK_V.password) &&
        Objects.equals(this.receiverName, REQUEST_CREATE_VOUCHER_LINK_V.receiverName) &&
        Objects.equals(this.phone, REQUEST_CREATE_VOUCHER_LINK_V.phone) &&
        Objects.equals(this.email, REQUEST_CREATE_VOUCHER_LINK_V.email) &&
        Objects.equals(this.signature, REQUEST_CREATE_VOUCHER_LINK_V.signature) &&
        Objects.equals(this.activeDate, REQUEST_CREATE_VOUCHER_LINK_V.activeDate) &&
        Objects.equals(this.isConvertToCoverLink, REQUEST_CREATE_VOUCHER_LINK_V.isConvertToCoverLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, productPriceId, quantity, orderName, expiryDate, transactionRefId, useOtp, otpType, password, receiverName, phone, email, signature, activeDate, isConvertToCoverLink);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class REQUESTCREATEVOUCHERLINKV {\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    productPriceId: ").append(toIndentedString(productPriceId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    orderName: ").append(toIndentedString(orderName)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    transactionRefId: ").append(toIndentedString(transactionRefId)).append("\n");
    sb.append("    useOtp: ").append(toIndentedString(useOtp)).append("\n");
    sb.append("    otpType: ").append(toIndentedString(otpType)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    receiverName: ").append(toIndentedString(receiverName)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    activeDate: ").append(toIndentedString(activeDate)).append("\n");
    sb.append("    isConvertToCoverLink: ").append(toIndentedString(isConvertToCoverLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("productId");
    openapiFields.add("productPriceId");
    openapiFields.add("quantity");
    openapiFields.add("orderName");
    openapiFields.add("expiryDate");
    openapiFields.add("transactionRefId");
    openapiFields.add("use_otp");
    openapiFields.add("otp_type");
    openapiFields.add("password");
    openapiFields.add("receiver_name");
    openapiFields.add("phone");
    openapiFields.add("email");
    openapiFields.add("signature");
    openapiFields.add("activeDate");
    openapiFields.add("isConvertToCoverLink");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("productId");
    openapiRequiredFields.add("productPriceId");
    openapiRequiredFields.add("quantity");
    openapiRequiredFields.add("orderName");
    openapiRequiredFields.add("expiryDate");
    openapiRequiredFields.add("transactionRefId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to REQUESTCREATEVOUCHERLINKV
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!REQUESTCREATEVOUCHERLINKV.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in REQUESTCREATEVOUCHERLINKV is not found in the empty JSON string", REQUESTCREATEVOUCHERLINKV.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!REQUESTCREATEVOUCHERLINKV.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `REQUESTCREATEVOUCHERLINKV` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : REQUESTCREATEVOUCHERLINKV.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("orderName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderName").toString()));
      }
      if (!jsonObj.get("expiryDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiryDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiryDate").toString()));
      }
      if (!jsonObj.get("transactionRefId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionRefId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionRefId").toString()));
      }
      if ((jsonObj.get("password") != null && !jsonObj.get("password").isJsonNull()) && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
      if ((jsonObj.get("receiver_name") != null && !jsonObj.get("receiver_name").isJsonNull()) && !jsonObj.get("receiver_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_name").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("signature") != null && !jsonObj.get("signature").isJsonNull()) && !jsonObj.get("signature").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signature` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signature").toString()));
      }
      if ((jsonObj.get("activeDate") != null && !jsonObj.get("activeDate").isJsonNull()) && !jsonObj.get("activeDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `activeDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("activeDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!REQUESTCREATEVOUCHERLINKV.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'REQUESTCREATEVOUCHERLINKV' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<REQUESTCREATEVOUCHERLINKV> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(REQUESTCREATEVOUCHERLINKV.class));

       return (TypeAdapter<T>) new TypeAdapter<REQUESTCREATEVOUCHERLINKV>() {
           @Override
           public void write(JsonWriter out, REQUESTCREATEVOUCHERLINKV value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public REQUESTCREATEVOUCHERLINKV read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of REQUESTCREATEVOUCHERLINKV given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of REQUESTCREATEVOUCHERLINKV
   * @throws IOException if the JSON string is invalid with respect to REQUESTCREATEVOUCHERLINKV
   */
  public static REQUESTCREATEVOUCHERLINKV fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, REQUESTCREATEVOUCHERLINKV.class);
  }

  /**
   * Convert an instance of REQUESTCREATEVOUCHERLINKV to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

