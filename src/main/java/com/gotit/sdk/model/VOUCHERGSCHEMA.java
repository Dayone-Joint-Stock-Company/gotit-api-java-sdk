/*
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gotit.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gotit.sdk.model.GROUPVOUCHERSCHEMA;
import com.gotit.sdk.model.PRODUCTG;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.gotit.sdk.JSON;

/**
 * VOUCHERGSCHEMA
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-05T09:04:05.866297444Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class VOUCHERGSCHEMA {
  public static final String SERIALIZED_NAME_ORDER_ID = "orderId";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  @javax.annotation.Nullable
  private Integer orderId;

  public static final String SERIALIZED_NAME_ORDER_NAME = "orderName";
  @SerializedName(SERIALIZED_NAME_ORDER_NAME)
  @javax.annotation.Nullable
  private String orderName;

  public static final String SERIALIZED_NAME_GROUP_VOUCHERS = "groupVouchers";
  @SerializedName(SERIALIZED_NAME_GROUP_VOUCHERS)
  @javax.annotation.Nullable
  private GROUPVOUCHERSCHEMA groupVouchers;

  public static final String SERIALIZED_NAME_VOUCHERS = "vouchers";
  @SerializedName(SERIALIZED_NAME_VOUCHERS)
  @javax.annotation.Nullable
  private List<PRODUCTG> vouchers = new ArrayList<>();

  public VOUCHERGSCHEMA() {
  }

  public VOUCHERGSCHEMA orderId(@javax.annotation.Nullable Integer orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Order Id
   * @return orderId
   */
  @javax.annotation.Nullable
  public Integer getOrderId() {
    return orderId;
  }

  public void setOrderId(@javax.annotation.Nullable Integer orderId) {
    this.orderId = orderId;
  }


  public VOUCHERGSCHEMA orderName(@javax.annotation.Nullable String orderName) {
    this.orderName = orderName;
    return this;
  }

  /**
   * Order name from client request
   * @return orderName
   */
  @javax.annotation.Nullable
  public String getOrderName() {
    return orderName;
  }

  public void setOrderName(@javax.annotation.Nullable String orderName) {
    this.orderName = orderName;
  }


  public VOUCHERGSCHEMA groupVouchers(@javax.annotation.Nullable GROUPVOUCHERSCHEMA groupVouchers) {
    this.groupVouchers = groupVouchers;
    return this;
  }

  /**
   * Get groupVouchers
   * @return groupVouchers
   */
  @javax.annotation.Nullable
  public GROUPVOUCHERSCHEMA getGroupVouchers() {
    return groupVouchers;
  }

  public void setGroupVouchers(@javax.annotation.Nullable GROUPVOUCHERSCHEMA groupVouchers) {
    this.groupVouchers = groupVouchers;
  }


  public VOUCHERGSCHEMA vouchers(@javax.annotation.Nullable List<PRODUCTG> vouchers) {
    this.vouchers = vouchers;
    return this;
  }

  public VOUCHERGSCHEMA addVouchersItem(PRODUCTG vouchersItem) {
    if (this.vouchers == null) {
      this.vouchers = new ArrayList<>();
    }
    this.vouchers.add(vouchersItem);
    return this;
  }

  /**
   * Get vouchers
   * @return vouchers
   */
  @javax.annotation.Nullable
  public List<PRODUCTG> getVouchers() {
    return vouchers;
  }

  public void setVouchers(@javax.annotation.Nullable List<PRODUCTG> vouchers) {
    this.vouchers = vouchers;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VOUCHERGSCHEMA VOUCHER_G_SCHEMA = (VOUCHERGSCHEMA) o;
    return Objects.equals(this.orderId, VOUCHER_G_SCHEMA.orderId) &&
        Objects.equals(this.orderName, VOUCHER_G_SCHEMA.orderName) &&
        Objects.equals(this.groupVouchers, VOUCHER_G_SCHEMA.groupVouchers) &&
        Objects.equals(this.vouchers, VOUCHER_G_SCHEMA.vouchers);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderId, orderName, groupVouchers, vouchers);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VOUCHERGSCHEMA {\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderName: ").append(toIndentedString(orderName)).append("\n");
    sb.append("    groupVouchers: ").append(toIndentedString(groupVouchers)).append("\n");
    sb.append("    vouchers: ").append(toIndentedString(vouchers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("orderId");
    openapiFields.add("orderName");
    openapiFields.add("groupVouchers");
    openapiFields.add("vouchers");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VOUCHERGSCHEMA
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VOUCHERGSCHEMA.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VOUCHERGSCHEMA is not found in the empty JSON string", VOUCHERGSCHEMA.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VOUCHERGSCHEMA.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VOUCHERGSCHEMA` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("orderName") != null && !jsonObj.get("orderName").isJsonNull()) && !jsonObj.get("orderName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderName").toString()));
      }
      // validate the optional field `groupVouchers`
      if (jsonObj.get("groupVouchers") != null && !jsonObj.get("groupVouchers").isJsonNull()) {
        GROUPVOUCHERSCHEMA.validateJsonElement(jsonObj.get("groupVouchers"));
      }
      if (jsonObj.get("vouchers") != null && !jsonObj.get("vouchers").isJsonNull()) {
        JsonArray jsonArrayvouchers = jsonObj.getAsJsonArray("vouchers");
        if (jsonArrayvouchers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("vouchers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `vouchers` to be an array in the JSON string but got `%s`", jsonObj.get("vouchers").toString()));
          }

          // validate the optional field `vouchers` (array)
          for (int i = 0; i < jsonArrayvouchers.size(); i++) {
            PRODUCTG.validateJsonElement(jsonArrayvouchers.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VOUCHERGSCHEMA.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VOUCHERGSCHEMA' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VOUCHERGSCHEMA> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VOUCHERGSCHEMA.class));

       return (TypeAdapter<T>) new TypeAdapter<VOUCHERGSCHEMA>() {
           @Override
           public void write(JsonWriter out, VOUCHERGSCHEMA value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VOUCHERGSCHEMA read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VOUCHERGSCHEMA given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VOUCHERGSCHEMA
   * @throws IOException if the JSON string is invalid with respect to VOUCHERGSCHEMA
   */
  public static VOUCHERGSCHEMA fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VOUCHERGSCHEMA.class);
  }

  /**
   * Convert an instance of VOUCHERGSCHEMA to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

