/*
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gotit.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gotit.sdk.model.PRODUCTDEFAULTLINKG;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.gotit.sdk.JSON;

/**
 * REQUESTCREATEVOUCHERLINKG
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-05T09:04:05.866297444Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class REQUESTCREATEVOUCHERLINKG {
  public static final String SERIALIZED_NAME_PRODUCT_LIST = "productList";
  @SerializedName(SERIALIZED_NAME_PRODUCT_LIST)
  @javax.annotation.Nonnull
  private List<PRODUCTDEFAULTLINKG> productList = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORDER_NAME = "orderName";
  @SerializedName(SERIALIZED_NAME_ORDER_NAME)
  @javax.annotation.Nonnull
  private String orderName;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiryDate";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  @javax.annotation.Nonnull
  private String expiryDate;

  public static final String SERIALIZED_NAME_TRANSACTION_REF_ID = "transactionRefId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_REF_ID)
  @javax.annotation.Nonnull
  private String transactionRefId;

  public static final String SERIALIZED_NAME_USE_OTP = "use_otp";
  @SerializedName(SERIALIZED_NAME_USE_OTP)
  @javax.annotation.Nullable
  private Integer useOtp;

  public static final String SERIALIZED_NAME_OTP_TYPE = "otp_type";
  @SerializedName(SERIALIZED_NAME_OTP_TYPE)
  @javax.annotation.Nullable
  private Integer otpType;

  public static final String SERIALIZED_NAME_PASSWORD = "password";
  @SerializedName(SERIALIZED_NAME_PASSWORD)
  @javax.annotation.Nullable
  private String password;

  public static final String SERIALIZED_NAME_RECEIVER_NAME = "receiver_name";
  @SerializedName(SERIALIZED_NAME_RECEIVER_NAME)
  @javax.annotation.Nullable
  private String receiverName;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  @javax.annotation.Nullable
  private String phone;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nullable
  private String email;

  public REQUESTCREATEVOUCHERLINKG() {
  }

  public REQUESTCREATEVOUCHERLINKG productList(@javax.annotation.Nonnull List<PRODUCTDEFAULTLINKG> productList) {
    this.productList = productList;
    return this;
  }

  public REQUESTCREATEVOUCHERLINKG addProductListItem(PRODUCTDEFAULTLINKG productListItem) {
    if (this.productList == null) {
      this.productList = new ArrayList<>();
    }
    this.productList.add(productListItem);
    return this;
  }

  /**
   * Get productList
   * @return productList
   */
  @javax.annotation.Nonnull
  public List<PRODUCTDEFAULTLINKG> getProductList() {
    return productList;
  }

  public void setProductList(@javax.annotation.Nonnull List<PRODUCTDEFAULTLINKG> productList) {
    this.productList = productList;
  }


  public REQUESTCREATEVOUCHERLINKG orderName(@javax.annotation.Nonnull String orderName) {
    this.orderName = orderName;
    return this;
  }

  /**
   * Please don&#39;t use the voucher recipient or the content changes daily or frequently. Owl French: Customers specified name + [Month] + [Year] Example: Got It Promotion - Jul 2019
   * @return orderName
   */
  @javax.annotation.Nonnull
  public String getOrderName() {
    return orderName;
  }

  public void setOrderName(@javax.annotation.Nonnull String orderName) {
    this.orderName = orderName;
  }


  public REQUESTCREATEVOUCHERLINKG expiryDate(@javax.annotation.Nonnull String expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

  /**
   * Voucher expiration date. Syntax &#39;YYYY-MM-DD&#39;. The expiration date is specified specified in the contract between the partner and Got It, usually 3 months from the release date, maximum 12 months.
   * @return expiryDate
   */
  @javax.annotation.Nonnull
  public String getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(@javax.annotation.Nonnull String expiryDate) {
    this.expiryDate = expiryDate;
  }


  public REQUESTCREATEVOUCHERLINKG transactionRefId(@javax.annotation.Nonnull String transactionRefId) {
    this.transactionRefId = transactionRefId;
    return this;
  }

  /**
   * Transaction code receive from the customer request, used for comparison and reconciliation. If the transaction fails, after 5 mintegerues, you can use this transmitted transactionRefID to request again. Maximum 255 characters. Format of transactionRefId: prefix + &#39;_&#39; + character string In which: + prefix: string of 06 integer characters provided by Got It. + character string: string actively generated by clients Example: prefix: &#39;000742&#39; character string: &#39;20220126-6f823f2e&#39; &#x3D;&gt; transactionRefId: &#39;000742_20220126-6f823f2e&#39;
   * @return transactionRefId
   */
  @javax.annotation.Nonnull
  public String getTransactionRefId() {
    return transactionRefId;
  }

  public void setTransactionRefId(@javax.annotation.Nonnull String transactionRefId) {
    this.transactionRefId = transactionRefId;
  }


  public REQUESTCREATEVOUCHERLINKG useOtp(@javax.annotation.Nullable Integer useOtp) {
    this.useOtp = useOtp;
    return this;
  }

  /**
   * &#x3D; 1 if the end user is required to enter a password to view the voucher. Example: 1
   * @return useOtp
   */
  @javax.annotation.Nullable
  public Integer getUseOtp() {
    return useOtp;
  }

  public void setUseOtp(@javax.annotation.Nullable Integer useOtp) {
    this.useOtp = useOtp;
  }


  public REQUESTCREATEVOUCHERLINKG otpType(@javax.annotation.Nullable Integer otpType) {
    this.otpType = otpType;
    return this;
  }

  /**
   * &#x3D; 1 if OTP is sent via phone number; &#x3D; 7 if OTP is sent via email; &#x3D; 8 if password Password is a fixed number - passed in param &#39;password&#39; For example: 1
   * @return otpType
   */
  @javax.annotation.Nullable
  public Integer getOtpType() {
    return otpType;
  }

  public void setOtpType(@javax.annotation.Nullable Integer otpType) {
    this.otpType = otpType;
  }


  public REQUESTCREATEVOUCHERLINKG password(@javax.annotation.Nullable String password) {
    this.password = password;
    return this;
  }

  /**
   * Fixed password (corresponding to otp_type&#x3D;8 passed in parram &#39;otp_type&#39;. For otp_type &#x3D; 1 or 7 do not need to be passed integero this field). Format requirement: 6 consecutive integer characters Example: &#39;325243&#39;
   * @return password
   */
  @javax.annotation.Nullable
  public String getPassword() {
    return password;
  }

  public void setPassword(@javax.annotation.Nullable String password) {
    this.password = password;
  }


  public REQUESTCREATEVOUCHERLINKG receiverName(@javax.annotation.Nullable String receiverName) {
    this.receiverName = receiverName;
    return this;
  }

  /**
   * Voucher recipient name Example: Son Tran
   * @return receiverName
   */
  @javax.annotation.Nullable
  public String getReceiverName() {
    return receiverName;
  }

  public void setReceiverName(@javax.annotation.Nullable String receiverName) {
    this.receiverName = receiverName;
  }


  public REQUESTCREATEVOUCHERLINKG phone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Phone number to receive the voucher. This is only the step to identify the phone number that will receive the voucher. This step has not been completed yet. Sending vouchers, sending vouchers via SMS will be a separate API section. This phone number is also used to receive OTP when the end-user opens the voucher link, respectively otp_type &#x3D; 1. Request format: 10 consecutive integer characters. For example: 0909xxxxxx
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
  }


  public REQUESTCREATEVOUCHERLINKG email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * Email to receive the voucher. This is just the step to identify the email address that will receive the voucher. This step does not include sending the voucher, sending the voucher via email will be a separate API section. This email address is also used to receive OTP when the end-user opens the voucher link, corresponding to otp_type &#x3D; 7 . For example: son.tran@ dayone.vn
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    REQUESTCREATEVOUCHERLINKG REQUEST_CREATE_VOUCHER_LINK_G = (REQUESTCREATEVOUCHERLINKG) o;
    return Objects.equals(this.productList, REQUEST_CREATE_VOUCHER_LINK_G.productList) &&
        Objects.equals(this.orderName, REQUEST_CREATE_VOUCHER_LINK_G.orderName) &&
        Objects.equals(this.expiryDate, REQUEST_CREATE_VOUCHER_LINK_G.expiryDate) &&
        Objects.equals(this.transactionRefId, REQUEST_CREATE_VOUCHER_LINK_G.transactionRefId) &&
        Objects.equals(this.useOtp, REQUEST_CREATE_VOUCHER_LINK_G.useOtp) &&
        Objects.equals(this.otpType, REQUEST_CREATE_VOUCHER_LINK_G.otpType) &&
        Objects.equals(this.password, REQUEST_CREATE_VOUCHER_LINK_G.password) &&
        Objects.equals(this.receiverName, REQUEST_CREATE_VOUCHER_LINK_G.receiverName) &&
        Objects.equals(this.phone, REQUEST_CREATE_VOUCHER_LINK_G.phone) &&
        Objects.equals(this.email, REQUEST_CREATE_VOUCHER_LINK_G.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productList, orderName, expiryDate, transactionRefId, useOtp, otpType, password, receiverName, phone, email);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class REQUESTCREATEVOUCHERLINKG {\n");
    sb.append("    productList: ").append(toIndentedString(productList)).append("\n");
    sb.append("    orderName: ").append(toIndentedString(orderName)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    transactionRefId: ").append(toIndentedString(transactionRefId)).append("\n");
    sb.append("    useOtp: ").append(toIndentedString(useOtp)).append("\n");
    sb.append("    otpType: ").append(toIndentedString(otpType)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    receiverName: ").append(toIndentedString(receiverName)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("productList");
    openapiFields.add("orderName");
    openapiFields.add("expiryDate");
    openapiFields.add("transactionRefId");
    openapiFields.add("use_otp");
    openapiFields.add("otp_type");
    openapiFields.add("password");
    openapiFields.add("receiver_name");
    openapiFields.add("phone");
    openapiFields.add("email");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("productList");
    openapiRequiredFields.add("orderName");
    openapiRequiredFields.add("expiryDate");
    openapiRequiredFields.add("transactionRefId");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to REQUESTCREATEVOUCHERLINKG
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!REQUESTCREATEVOUCHERLINKG.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in REQUESTCREATEVOUCHERLINKG is not found in the empty JSON string", REQUESTCREATEVOUCHERLINKG.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!REQUESTCREATEVOUCHERLINKG.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `REQUESTCREATEVOUCHERLINKG` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : REQUESTCREATEVOUCHERLINKG.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the json data is an array
      if (!jsonObj.get("productList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `productList` to be an array in the JSON string but got `%s`", jsonObj.get("productList").toString()));
      }

      JsonArray jsonArrayproductList = jsonObj.getAsJsonArray("productList");
      // validate the required field `productList` (array)
      for (int i = 0; i < jsonArrayproductList.size(); i++) {
        PRODUCTDEFAULTLINKG.validateJsonElement(jsonArrayproductList.get(i));
      };
      if (!jsonObj.get("orderName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderName").toString()));
      }
      if (!jsonObj.get("expiryDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiryDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiryDate").toString()));
      }
      if (!jsonObj.get("transactionRefId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionRefId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionRefId").toString()));
      }
      if ((jsonObj.get("password") != null && !jsonObj.get("password").isJsonNull()) && !jsonObj.get("password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("password").toString()));
      }
      if ((jsonObj.get("receiver_name") != null && !jsonObj.get("receiver_name").isJsonNull()) && !jsonObj.get("receiver_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_name").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!REQUESTCREATEVOUCHERLINKG.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'REQUESTCREATEVOUCHERLINKG' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<REQUESTCREATEVOUCHERLINKG> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(REQUESTCREATEVOUCHERLINKG.class));

       return (TypeAdapter<T>) new TypeAdapter<REQUESTCREATEVOUCHERLINKG>() {
           @Override
           public void write(JsonWriter out, REQUESTCREATEVOUCHERLINKG value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public REQUESTCREATEVOUCHERLINKG read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of REQUESTCREATEVOUCHERLINKG given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of REQUESTCREATEVOUCHERLINKG
   * @throws IOException if the JSON string is invalid with respect to REQUESTCREATEVOUCHERLINKG
   */
  public static REQUESTCREATEVOUCHERLINKG fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, REQUESTCREATEVOUCHERLINKG.class);
  }

  /**
   * Convert an instance of REQUESTCREATEVOUCHERLINKG to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

