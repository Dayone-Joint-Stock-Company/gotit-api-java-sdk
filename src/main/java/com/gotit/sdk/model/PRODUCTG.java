/*
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gotit.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gotit.sdk.model.VENDORSCHEMA;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.gotit.sdk.JSON;

/**
 * PRODUCTG
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-05T09:04:05.866297444Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class PRODUCTG {
  public static final String SERIALIZED_NAME_PRODUCT_IMAGE = "product_image";
  @SerializedName(SERIALIZED_NAME_PRODUCT_IMAGE)
  @javax.annotation.Nullable
  private String productImage;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  @javax.annotation.Nullable
  private String link;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  @javax.annotation.Nullable
  private String code;

  public static final String SERIALIZED_NAME_SERIAL = "serial";
  @SerializedName(SERIALIZED_NAME_SERIAL)
  @javax.annotation.Nullable
  private String serial;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  @javax.annotation.Nullable
  private Integer productId;

  public static final String SERIALIZED_NAME_PRICE_ID = "price_id";
  @SerializedName(SERIALIZED_NAME_PRICE_ID)
  @javax.annotation.Nullable
  private Integer priceId;

  public static final String SERIALIZED_NAME_VALUE = "value";
  @SerializedName(SERIALIZED_NAME_VALUE)
  @javax.annotation.Nullable
  private Integer value;

  public static final String SERIALIZED_NAME_EXPIRED_DATE = "expired_date";
  @SerializedName(SERIALIZED_NAME_EXPIRED_DATE)
  @javax.annotation.Nullable
  private String expiredDate;

  public static final String SERIALIZED_NAME_PARTNER = "partner";
  @SerializedName(SERIALIZED_NAME_PARTNER)
  @javax.annotation.Nullable
  private VENDORSCHEMA partner;

  public PRODUCTG() {
  }

  public PRODUCTG productImage(@javax.annotation.Nullable String productImage) {
    this.productImage = productImage;
    return this;
  }

  /**
   * Get productImage
   * @return productImage
   */
  @javax.annotation.Nullable
  public String getProductImage() {
    return productImage;
  }

  public void setProductImage(@javax.annotation.Nullable String productImage) {
    this.productImage = productImage;
  }


  public PRODUCTG link(@javax.annotation.Nullable String link) {
    this.link = link;
    return this;
  }

  /**
   * Get link
   * @return link
   */
  @javax.annotation.Nullable
  public String getLink() {
    return link;
  }

  public void setLink(@javax.annotation.Nullable String link) {
    this.link = link;
  }


  public PRODUCTG code(@javax.annotation.Nullable String code) {
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(@javax.annotation.Nullable String code) {
    this.code = code;
  }


  public PRODUCTG serial(@javax.annotation.Nullable String serial) {
    this.serial = serial;
    return this;
  }

  /**
   * Get serial
   * @return serial
   */
  @javax.annotation.Nullable
  public String getSerial() {
    return serial;
  }

  public void setSerial(@javax.annotation.Nullable String serial) {
    this.serial = serial;
  }


  public PRODUCTG productId(@javax.annotation.Nullable Integer productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Get productId
   * @return productId
   */
  @javax.annotation.Nullable
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(@javax.annotation.Nullable Integer productId) {
    this.productId = productId;
  }


  public PRODUCTG priceId(@javax.annotation.Nullable Integer priceId) {
    this.priceId = priceId;
    return this;
  }

  /**
   * Get priceId
   * @return priceId
   */
  @javax.annotation.Nullable
  public Integer getPriceId() {
    return priceId;
  }

  public void setPriceId(@javax.annotation.Nullable Integer priceId) {
    this.priceId = priceId;
  }


  public PRODUCTG value(@javax.annotation.Nullable Integer value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @javax.annotation.Nullable
  public Integer getValue() {
    return value;
  }

  public void setValue(@javax.annotation.Nullable Integer value) {
    this.value = value;
  }


  public PRODUCTG expiredDate(@javax.annotation.Nullable String expiredDate) {
    this.expiredDate = expiredDate;
    return this;
  }

  /**
   * Get expiredDate
   * @return expiredDate
   */
  @javax.annotation.Nullable
  public String getExpiredDate() {
    return expiredDate;
  }

  public void setExpiredDate(@javax.annotation.Nullable String expiredDate) {
    this.expiredDate = expiredDate;
  }


  public PRODUCTG partner(@javax.annotation.Nullable VENDORSCHEMA partner) {
    this.partner = partner;
    return this;
  }

  /**
   * Get partner
   * @return partner
   */
  @javax.annotation.Nullable
  public VENDORSCHEMA getPartner() {
    return partner;
  }

  public void setPartner(@javax.annotation.Nullable VENDORSCHEMA partner) {
    this.partner = partner;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PRODUCTG PRODUCT_G = (PRODUCTG) o;
    return Objects.equals(this.productImage, PRODUCT_G.productImage) &&
        Objects.equals(this.link, PRODUCT_G.link) &&
        Objects.equals(this.code, PRODUCT_G.code) &&
        Objects.equals(this.serial, PRODUCT_G.serial) &&
        Objects.equals(this.productId, PRODUCT_G.productId) &&
        Objects.equals(this.priceId, PRODUCT_G.priceId) &&
        Objects.equals(this.value, PRODUCT_G.value) &&
        Objects.equals(this.expiredDate, PRODUCT_G.expiredDate) &&
        Objects.equals(this.partner, PRODUCT_G.partner);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(productImage, link, code, serial, productId, priceId, value, expiredDate, partner);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PRODUCTG {\n");
    sb.append("    productImage: ").append(toIndentedString(productImage)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    priceId: ").append(toIndentedString(priceId)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    expiredDate: ").append(toIndentedString(expiredDate)).append("\n");
    sb.append("    partner: ").append(toIndentedString(partner)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("product_image");
    openapiFields.add("link");
    openapiFields.add("code");
    openapiFields.add("serial");
    openapiFields.add("product_id");
    openapiFields.add("price_id");
    openapiFields.add("value");
    openapiFields.add("expired_date");
    openapiFields.add("partner");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PRODUCTG
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PRODUCTG.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PRODUCTG is not found in the empty JSON string", PRODUCTG.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PRODUCTG.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PRODUCTG` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("product_image") != null && !jsonObj.get("product_image").isJsonNull()) && !jsonObj.get("product_image").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_image` to be a primitive type in the JSON string but got `%s`", jsonObj.get("product_image").toString()));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("serial") != null && !jsonObj.get("serial").isJsonNull()) && !jsonObj.get("serial").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serial` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serial").toString()));
      }
      if ((jsonObj.get("expired_date") != null && !jsonObj.get("expired_date").isJsonNull()) && !jsonObj.get("expired_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expired_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expired_date").toString()));
      }
      // validate the optional field `partner`
      if (jsonObj.get("partner") != null && !jsonObj.get("partner").isJsonNull()) {
        VENDORSCHEMA.validateJsonElement(jsonObj.get("partner"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PRODUCTG.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PRODUCTG' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PRODUCTG> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PRODUCTG.class));

       return (TypeAdapter<T>) new TypeAdapter<PRODUCTG>() {
           @Override
           public void write(JsonWriter out, PRODUCTG value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PRODUCTG read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PRODUCTG given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PRODUCTG
   * @throws IOException if the JSON string is invalid with respect to PRODUCTG
   */
  public static PRODUCTG fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PRODUCTG.class);
  }

  /**
   * Convert an instance of PRODUCTG to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

