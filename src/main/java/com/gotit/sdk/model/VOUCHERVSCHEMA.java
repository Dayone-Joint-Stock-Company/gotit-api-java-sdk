/*
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gotit.sdk.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.gotit.sdk.model.VOUCHERVSCHEMAProduct;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.gotit.sdk.JSON;

/**
 * VOUCHERVSCHEMA
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-05T09:04:05.866297444Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class VOUCHERVSCHEMA {
  public static final String SERIALIZED_NAME_TRANSACTION_REF_ID = "transactionRefId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_REF_ID)
  @javax.annotation.Nullable
  private String transactionRefId;

  public static final String SERIALIZED_NAME_VOUCHER_CODE = "voucherCode";
  @SerializedName(SERIALIZED_NAME_VOUCHER_CODE)
  @javax.annotation.Nullable
  private String voucherCode;

  public static final String SERIALIZED_NAME_VOUCHER_LINK = "voucherLink";
  @SerializedName(SERIALIZED_NAME_VOUCHER_LINK)
  @javax.annotation.Nullable
  private String voucherLink;

  public static final String SERIALIZED_NAME_VOUCHER_LINK_CODE = "voucherLinkCode";
  @SerializedName(SERIALIZED_NAME_VOUCHER_LINK_CODE)
  @javax.annotation.Nullable
  private String voucherLinkCode;

  public static final String SERIALIZED_NAME_VOUCHER_IMAGE_LINK = "voucherImageLink";
  @SerializedName(SERIALIZED_NAME_VOUCHER_IMAGE_LINK)
  @javax.annotation.Nullable
  private String voucherImageLink;

  public static final String SERIALIZED_NAME_VOUCHER_COVER_LINK = "voucherCoverLink";
  @SerializedName(SERIALIZED_NAME_VOUCHER_COVER_LINK)
  @javax.annotation.Nullable
  private String voucherCoverLink;

  public static final String SERIALIZED_NAME_VOUCHER_COVER_LINK_CODE = "voucherCoverLinkCode";
  @SerializedName(SERIALIZED_NAME_VOUCHER_COVER_LINK_CODE)
  @javax.annotation.Nullable
  private String voucherCoverLinkCode;

  public static final String SERIALIZED_NAME_VOUCHER_SERIAL = "voucherSerial";
  @SerializedName(SERIALIZED_NAME_VOUCHER_SERIAL)
  @javax.annotation.Nullable
  private String voucherSerial;

  public static final String SERIALIZED_NAME_EXPIRY_DATE = "expiryDate";
  @SerializedName(SERIALIZED_NAME_EXPIRY_DATE)
  @javax.annotation.Nullable
  private String expiryDate;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  @javax.annotation.Nullable
  private VOUCHERVSCHEMAProduct product;

  public VOUCHERVSCHEMA() {
  }

  public VOUCHERVSCHEMA transactionRefId(@javax.annotation.Nullable String transactionRefId) {
    this.transactionRefId = transactionRefId;
    return this;
  }

  /**
   * TransactionRefId receive from client request
   * @return transactionRefId
   */
  @javax.annotation.Nullable
  public String getTransactionRefId() {
    return transactionRefId;
  }

  public void setTransactionRefId(@javax.annotation.Nullable String transactionRefId) {
    this.transactionRefId = transactionRefId;
  }


  public VOUCHERVSCHEMA voucherCode(@javax.annotation.Nullable String voucherCode) {
    this.voucherCode = voucherCode;
    return this;
  }

  /**
   * Voucher code. Contains 10 numbers, unique and not duplicated with any other voucher. For some brands that do not use Got It code but use integerernal code (Big C, Mobile World), the system returns the integerernal code.
   * @return voucherCode
   */
  @javax.annotation.Nullable
  public String getVoucherCode() {
    return voucherCode;
  }

  public void setVoucherCode(@javax.annotation.Nullable String voucherCode) {
    this.voucherCode = voucherCode;
  }


  public VOUCHERVSCHEMA voucherLink(@javax.annotation.Nullable String voucherLink) {
    this.voucherLink = voucherLink;
    return this;
  }

  /**
   * Link of voucher
   * @return voucherLink
   */
  @javax.annotation.Nullable
  public String getVoucherLink() {
    return voucherLink;
  }

  public void setVoucherLink(@javax.annotation.Nullable String voucherLink) {
    this.voucherLink = voucherLink;
  }


  public VOUCHERVSCHEMA voucherLinkCode(@javax.annotation.Nullable String voucherLinkCode) {
    this.voucherLinkCode = voucherLinkCode;
    return this;
  }

  /**
   * Last 8 characters of voucher link
   * @return voucherLinkCode
   */
  @javax.annotation.Nullable
  public String getVoucherLinkCode() {
    return voucherLinkCode;
  }

  public void setVoucherLinkCode(@javax.annotation.Nullable String voucherLinkCode) {
    this.voucherLinkCode = voucherLinkCode;
  }


  public VOUCHERVSCHEMA voucherImageLink(@javax.annotation.Nullable String voucherImageLink) {
    this.voucherImageLink = voucherImageLink;
    return this;
  }

  /**
   * Link of voucher image. To display vouchers as images
   * @return voucherImageLink
   */
  @javax.annotation.Nullable
  public String getVoucherImageLink() {
    return voucherImageLink;
  }

  public void setVoucherImageLink(@javax.annotation.Nullable String voucherImageLink) {
    this.voucherImageLink = voucherImageLink;
  }


  public VOUCHERVSCHEMA voucherCoverLink(@javax.annotation.Nullable String voucherCoverLink) {
    this.voucherCoverLink = voucherCoverLink;
    return this;
  }

  /**
   * Cover link of voucher.
   * @return voucherCoverLink
   */
  @javax.annotation.Nullable
  public String getVoucherCoverLink() {
    return voucherCoverLink;
  }

  public void setVoucherCoverLink(@javax.annotation.Nullable String voucherCoverLink) {
    this.voucherCoverLink = voucherCoverLink;
  }


  public VOUCHERVSCHEMA voucherCoverLinkCode(@javax.annotation.Nullable String voucherCoverLinkCode) {
    this.voucherCoverLinkCode = voucherCoverLinkCode;
    return this;
  }

  /**
   * Last 8 characters of voucher cover link
   * @return voucherCoverLinkCode
   */
  @javax.annotation.Nullable
  public String getVoucherCoverLinkCode() {
    return voucherCoverLinkCode;
  }

  public void setVoucherCoverLinkCode(@javax.annotation.Nullable String voucherCoverLinkCode) {
    this.voucherCoverLinkCode = voucherCoverLinkCode;
  }


  public VOUCHERVSCHEMA voucherSerial(@javax.annotation.Nullable String voucherSerial) {
    this.voucherSerial = voucherSerial;
    return this;
  }

  /**
   * Is a unique code to identify voucher link v and is not valid for use. For example: V1562342ET2
   * @return voucherSerial
   */
  @javax.annotation.Nullable
  public String getVoucherSerial() {
    return voucherSerial;
  }

  public void setVoucherSerial(@javax.annotation.Nullable String voucherSerial) {
    this.voucherSerial = voucherSerial;
  }


  public VOUCHERVSCHEMA expiryDate(@javax.annotation.Nullable String expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

  /**
   * Voucher expiration date
   * @return expiryDate
   */
  @javax.annotation.Nullable
  public String getExpiryDate() {
    return expiryDate;
  }

  public void setExpiryDate(@javax.annotation.Nullable String expiryDate) {
    this.expiryDate = expiryDate;
  }


  public VOUCHERVSCHEMA product(@javax.annotation.Nullable VOUCHERVSCHEMAProduct product) {
    this.product = product;
    return this;
  }

  /**
   * Get product
   * @return product
   */
  @javax.annotation.Nullable
  public VOUCHERVSCHEMAProduct getProduct() {
    return product;
  }

  public void setProduct(@javax.annotation.Nullable VOUCHERVSCHEMAProduct product) {
    this.product = product;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VOUCHERVSCHEMA VOUCHER_V_SCHEMA = (VOUCHERVSCHEMA) o;
    return Objects.equals(this.transactionRefId, VOUCHER_V_SCHEMA.transactionRefId) &&
        Objects.equals(this.voucherCode, VOUCHER_V_SCHEMA.voucherCode) &&
        Objects.equals(this.voucherLink, VOUCHER_V_SCHEMA.voucherLink) &&
        Objects.equals(this.voucherLinkCode, VOUCHER_V_SCHEMA.voucherLinkCode) &&
        Objects.equals(this.voucherImageLink, VOUCHER_V_SCHEMA.voucherImageLink) &&
        Objects.equals(this.voucherCoverLink, VOUCHER_V_SCHEMA.voucherCoverLink) &&
        Objects.equals(this.voucherCoverLinkCode, VOUCHER_V_SCHEMA.voucherCoverLinkCode) &&
        Objects.equals(this.voucherSerial, VOUCHER_V_SCHEMA.voucherSerial) &&
        Objects.equals(this.expiryDate, VOUCHER_V_SCHEMA.expiryDate) &&
        Objects.equals(this.product, VOUCHER_V_SCHEMA.product);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionRefId, voucherCode, voucherLink, voucherLinkCode, voucherImageLink, voucherCoverLink, voucherCoverLinkCode, voucherSerial, expiryDate, product);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VOUCHERVSCHEMA {\n");
    sb.append("    transactionRefId: ").append(toIndentedString(transactionRefId)).append("\n");
    sb.append("    voucherCode: ").append(toIndentedString(voucherCode)).append("\n");
    sb.append("    voucherLink: ").append(toIndentedString(voucherLink)).append("\n");
    sb.append("    voucherLinkCode: ").append(toIndentedString(voucherLinkCode)).append("\n");
    sb.append("    voucherImageLink: ").append(toIndentedString(voucherImageLink)).append("\n");
    sb.append("    voucherCoverLink: ").append(toIndentedString(voucherCoverLink)).append("\n");
    sb.append("    voucherCoverLinkCode: ").append(toIndentedString(voucherCoverLinkCode)).append("\n");
    sb.append("    voucherSerial: ").append(toIndentedString(voucherSerial)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("transactionRefId");
    openapiFields.add("voucherCode");
    openapiFields.add("voucherLink");
    openapiFields.add("voucherLinkCode");
    openapiFields.add("voucherImageLink");
    openapiFields.add("voucherCoverLink");
    openapiFields.add("voucherCoverLinkCode");
    openapiFields.add("voucherSerial");
    openapiFields.add("expiryDate");
    openapiFields.add("product");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VOUCHERVSCHEMA
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VOUCHERVSCHEMA.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VOUCHERVSCHEMA is not found in the empty JSON string", VOUCHERVSCHEMA.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VOUCHERVSCHEMA.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VOUCHERVSCHEMA` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("transactionRefId") != null && !jsonObj.get("transactionRefId").isJsonNull()) && !jsonObj.get("transactionRefId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionRefId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionRefId").toString()));
      }
      if ((jsonObj.get("voucherCode") != null && !jsonObj.get("voucherCode").isJsonNull()) && !jsonObj.get("voucherCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voucherCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voucherCode").toString()));
      }
      if ((jsonObj.get("voucherLink") != null && !jsonObj.get("voucherLink").isJsonNull()) && !jsonObj.get("voucherLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voucherLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voucherLink").toString()));
      }
      if ((jsonObj.get("voucherLinkCode") != null && !jsonObj.get("voucherLinkCode").isJsonNull()) && !jsonObj.get("voucherLinkCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voucherLinkCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voucherLinkCode").toString()));
      }
      if ((jsonObj.get("voucherImageLink") != null && !jsonObj.get("voucherImageLink").isJsonNull()) && !jsonObj.get("voucherImageLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voucherImageLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voucherImageLink").toString()));
      }
      if ((jsonObj.get("voucherCoverLink") != null && !jsonObj.get("voucherCoverLink").isJsonNull()) && !jsonObj.get("voucherCoverLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voucherCoverLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voucherCoverLink").toString()));
      }
      if ((jsonObj.get("voucherCoverLinkCode") != null && !jsonObj.get("voucherCoverLinkCode").isJsonNull()) && !jsonObj.get("voucherCoverLinkCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voucherCoverLinkCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voucherCoverLinkCode").toString()));
      }
      if ((jsonObj.get("voucherSerial") != null && !jsonObj.get("voucherSerial").isJsonNull()) && !jsonObj.get("voucherSerial").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `voucherSerial` to be a primitive type in the JSON string but got `%s`", jsonObj.get("voucherSerial").toString()));
      }
      if ((jsonObj.get("expiryDate") != null && !jsonObj.get("expiryDate").isJsonNull()) && !jsonObj.get("expiryDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiryDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiryDate").toString()));
      }
      // validate the optional field `product`
      if (jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) {
        VOUCHERVSCHEMAProduct.validateJsonElement(jsonObj.get("product"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VOUCHERVSCHEMA.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VOUCHERVSCHEMA' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VOUCHERVSCHEMA> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VOUCHERVSCHEMA.class));

       return (TypeAdapter<T>) new TypeAdapter<VOUCHERVSCHEMA>() {
           @Override
           public void write(JsonWriter out, VOUCHERVSCHEMA value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VOUCHERVSCHEMA read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VOUCHERVSCHEMA given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VOUCHERVSCHEMA
   * @throws IOException if the JSON string is invalid with respect to VOUCHERVSCHEMA
   */
  public static VOUCHERVSCHEMA fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VOUCHERVSCHEMA.class);
  }

  /**
   * Convert an instance of VOUCHERVSCHEMA to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

