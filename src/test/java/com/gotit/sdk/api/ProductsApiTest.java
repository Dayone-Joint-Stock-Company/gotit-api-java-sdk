/*
 * Sample API
 * Technical document APIs for API Version 4.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: quang.huynh@gotit.vn
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.gotit.sdk.api;

import com.gotit.sdk.ApiException;
import com.gotit.sdk.model.HTTPBADREQUEST;
import com.gotit.sdk.model.HTTPINTERNALSERVERERROR;
import com.gotit.sdk.model.HTTPNOTFOUND;
import com.gotit.sdk.model.HTTPUNAUTHORIZED;
import com.gotit.sdk.model.PRODUCTDETAILRESPONSE;
import com.gotit.sdk.model.PRODUCTSRESPONSE;
import com.gotit.sdk.model.STORESRESPONSE;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductsApi
 */
@Disabled
public class ProductsApiTest {

    private final ProductsApi api = new ProductsApi();

    /**
     * Get all products master data
     *
     * Returns all products master data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListOfProductsTest() throws ApiException {
        String xGIAuthorization = null;
        Integer page = null;
        Integer pageSize = null;
        Integer minPrice = null;
        Integer maxPrice = null;
        Boolean isExcludeStoreListInfo = null;
        Integer storeListPage = null;
        Integer storeListPageSize = null;
        PRODUCTSRESPONSE response = api.getListOfProducts(xGIAuthorization, page, pageSize, minPrice, maxPrice, isExcludeStoreListInfo, storeListPage, storeListPageSize);
        // TODO: test validations
    }

    /**
     * Get product detail data
     *
     * Returns product detail data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProductDetailTest() throws ApiException {
        String xGIAuthorization = null;
        Integer id = null;
        Boolean isExcludeStoreListInfo = null;
        Integer storeListPage = null;
        Integer storeListPageSize = null;
        PRODUCTDETAILRESPONSE response = api.getProductDetail(xGIAuthorization, id, isExcludeStoreListInfo, storeListPage, storeListPageSize);
        // TODO: test validations
    }

    /**
     * Get stores of this product
     *
     * Returns all stores of this product
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStoresOfProductTest() throws ApiException {
        String xGIAuthorization = null;
        Integer id = null;
        STORESRESPONSE response = api.getStoresOfProduct(xGIAuthorization, id);
        // TODO: test validations
    }

}
